% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/kulldorff.R
\name{ngkd}
\alias{Kulldorff2001}
\alias{circleskd}
\alias{identifyClusters}
\alias{ngkd}
\alias{print.ngkd}
\title{Implements The Approach of Kulldorff (2001)}
\usage{
ngkd(pts, radius, time)

\method{print}{ngkd}(x, ...)

Kulldorff2001(observed, theoretical, ngkd, loglambda = TRUE)

identifyClusters(spixdf, ngkd, nclustMax = nrow(spixdf), plot = TRUE)

circleskd(x, text = NA)
}
\arguments{
\item{pts}{an object inheriting the class SpatialPixels of the
package sp, containing the grid of pixels used in the scan (each
pixel being the possible center of a circular cluster).}

\item{radius}{a numeric vector of positive and increasing values
corresponding to the possible cluster radiuses (ordered
increasingly) tested in the scan.  The units should be the same as
those used in \code{pts}.}

\item{time}{a numeric vector of positive and increading values
corresponding to the possible cluster durations tested in the scan
(ordered increasingly). The time units are not important, as these
values are not used in the calculations (only for display
purposes).}

\item{x}{for \code{prind.ngkd}, an object of class "ngkd" returned
by the function \code{ngkd}.  For \code{circleskd}, an object of
class \code{SpatialPointsDataFrame} indicating the location of the
cluster centers, returned by \code{identifyClusters}.}

\item{observed}{a data.frame with \code{Nt} columns and \code{Np}
rows (where \code{Nt} is the number of time units considered in the
scan, and \code{Np} the number of pixels in \code{pts}), containing
the number of cases observed in each pixel during each time unit.}

\item{theoretical}{a data.frame with \code{Nt} columns and
\code{Np} rows (where \code{Nt} is the number of time units
considered in the scan, and \code{Np} the number of pixels in
\code{pts}), containing the number of cases expected in each pixel
during each time unit under "normal" conditions.}

\item{ngkd}{an object of class "ngkd" returned
by the function \code{ngkd}.}

\item{loglambda}{logical. Should the actual value of the likelihood
ratio be returned, or its logarithm (the latter often results in
clearer maps).}

\item{spixdf}{an object of class \code{SpatialPixelsDataFrame}
returned by the function \code{Kulldorff2001}.}

\item{nclustMax}{the maximum number of clusters that should be
returned by the function.}

\item{plot}{logical. If \code{TRUE}, the function plots the
location of the most likely clusters on a map of the
(log-)likelihood ratios for each pixel.}

\item{text}{Either a missing value, in which case the function
indicates the order of the clusters (first, second, etc.) with
their duration at the center of the cluster; or a character string
indicating the variable in \code{x} that should be used to plot the
text at the center of the cluster (e.g. "radius", "time", "index",
"loglambda"); or a character vector with the same number of
elements as \code{nrow(x)} indicating for each cluster what text to
write at the center of the cluster.}

\item{\dots}{additional arguments to be passed to or from other
functions.}
}
\value{
\code{ngkd} returns a list of class \code{"ngkd"} required
by all the functions of the packages (stores all the spatial and
temporal information about the scan). \code{Kulldorff2001}
implements the scan statistics of Kulldorff (2001) and return, for
each pixel of the map, the (log-)likelihood ratio associated to the
best cluster centered on this pixel, as well as the diameter and
duration of the pixel (these variables are returned as a
\code{SpatialPixelsDataFrame}). \code{identifyClusters} returns a
\code{SpatialPointsDataFrame} containing the most likely
nonoverlapping clusters. Each row corresponds to the center of a
cluster, and the data slot contains the pixel index in the map used
to create the \code{ngkd} object corresponding to this point, the
size and duration of the cluster, as well as the (log-) likelihood
ratio corresponding to this pixel.
}
\description{
Implements The Approach of Kulldorff (2001)
}
\details{
\code{ngkd} prepares the data for the scan (identification
of neighbourhood for each pixel. \code{Kulldorff2001} implements the
scan statistics, and calculates the most likely cluster (size,
duration and likelihood ratio) associated to each pixel of the map.
\code{identifyClusters} identifies and plots the most likely
non-overlapping clusters on the map. \code{circleskd} can be used
to plot the clusters to an already existing image of the area.
}
\examples{
## We have a map of France
image(francekd)


##############################################
##
## Simulation of a dataset. Beginning of the simulations
##
## We simulate the following situation:
## (i) a "normal noise" of cases during 52 weeks (in average, 0.001
##     cases expected per pixel):
set.seed(9809)
cases <- as.data.frame(matrix(as.double(rpois(nrow(francekd)*52,0.001)),
                              nrow=nrow(francekd)))

## (ii) we add a cluster of "unusual" cases in the North-east of
## France for the last 8 weeks
df <- structure(list(gg = c(160L, 123L, 230L, 368L, 333L, 231L,
271L, 307L, 161L, 159L, 126L, 157L, 270L, 235L, 336L, 333L, 193L,
303L, 307L), gi = c(3L, 1L, 6L, 2L, 8L, 4L, 4L, 7L, 4L, 6L, 2L, 6L,
2L, 2L, 2L, 1L, 6L, 8L, 8L)), .Names = c("gg", "gi"), row.names =
c(NA, -19L), class = "data.frame")
for (i in 1:nrow(df)) {
   cases[df[i,1], df[i,2]] <- cases[df[i,1], df[i,2]]+1
}

## End of the simulations
##############################################

## Show these data (sum over the last year)
su <- apply(cases,1,sum)
francekd$totalCases <- su
image(francekd[,"totalCases"])
## Note the cluster in North-eastern France

## The object cases contains the number of cases recorded in each pixel
## (rows) for each week (column) with the first column corresponding to
## the most recent week.

## Suppose, for example, that we expect in theory 0.001 cases per
## pixel for each week (the model might be more complex, but is
## good enough for this demonstration). Therefore, the expected
## number of cases is:
expect <- as.data.frame(matrix(rep(0.001,nrow(francekd)*52),
                               nrow=nrow(francekd)))

## Now, we scan with the following radiuses (in meters)
(rad <- c(1:6)*50000)

## And every week, for one year, i.e.
(weekno <- 1:52)
## each element of weekno corresponds to a column in cases or in expect
## the most recent week is stored first in this data.frame

## Prepare the data:
ng <- ngkd(francekd, rad, weekno)

## Scan:
kd <- Kulldorff2001(cases, expect, ng)

## identify Clusters
clust <- identifyClusters(kd, ng)

## Note that the function identifies correctly both the size and
## the duration on he cluster.

## or, to show these clusters on the map of all cases:
image(francekd[,"totalCases"])
circleskd(clust, c("Best", "Second", "Third"))
}
\author{
Clement Calenge, \email{clement.calenge@oncfs.gouv.fr}
}
\references{
Kulldorff, M. (2001) Prospective time periodic
geographical disease surveillance using a scan
statistic. \emph{Journal of the Royal Statistical Society: Series
A}, \bold{164}, 61-72.
}

